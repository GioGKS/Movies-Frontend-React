{"ast":null,"code":"var _jsxFileName = \"/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/forms/MarkdownField.tsx\",\n  _s = $RefreshSig$();\nimport { Field, useFormikContext } from \"formik\";\nimport ReactMarkdown from \"react-markdown\";\nimport './MarkdownField.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MarkdownField(props) {\n  _s();\n  const {\n    values\n  } = useFormikContext();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-3 form-markdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: props.displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: props.field,\n          as: \"textarea\",\n          className: \"form-textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [props.displayName, \" (preview):\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"markdown-container\",\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: values[props.field]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_s(MarkdownField, \"cG5eMi6iznMAAs82yhhO8wafyb0=\", false, function () {\n  return [useFormikContext];\n});\n_c = MarkdownField;\nvar _c;\n$RefreshReg$(_c, \"MarkdownField\");","map":{"version":3,"names":["Field","useFormikContext","ReactMarkdown","jsxDEV","_jsxDEV","MarkdownField","props","_s","values","className","children","displayName","fileName","_jsxFileName","lineNumber","columnNumber","name","field","as","_c","$RefreshReg$"],"sources":["/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/forms/MarkdownField.tsx"],"sourcesContent":["import { Field, useFormikContext } from \"formik\";\nimport ReactMarkdown from \"react-markdown\"\nimport './MarkdownField.css'\n\nexport default function MarkdownField(props: markdownFieldProps){\n\n    const {values} = useFormikContext<any>();\n\n    return (\n        <div className=\"mb-3 form-markdown\">\n            <div>\n                <label>{props.displayName}</label>\n                <div>\n                    <Field name={props.field} as=\"textarea\" className=\"form-textarea\" />\n                </div>\n            </div>\n            <div>\n                <label>{props.displayName} (preview):</label>\n                <div className=\"markdown-container\">\n                    <ReactMarkdown>{values[props.field]}</ReactMarkdown>\n\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\n\ninterface markdownFieldProps{\n    displayName: string;\n    field: string;\n}"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,gBAAgB,QAAQ,QAAQ;AAChD,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,OAAO,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAe,SAASC,aAAaA,CAACC,KAAyB,EAAC;EAAAC,EAAA;EAE5D,MAAM;IAACC;EAAM,CAAC,GAAGP,gBAAgB,CAAM,CAAC;EAExC,oBACIG,OAAA;IAAKK,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/BN,OAAA;MAAAM,QAAA,gBACIN,OAAA;QAAAM,QAAA,EAAQJ,KAAK,CAACK;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClCX,OAAA;QAAAM,QAAA,eACIN,OAAA,CAACJ,KAAK;UAACgB,IAAI,EAAEV,KAAK,CAACW,KAAM;UAACC,EAAE,EAAC,UAAU;UAACT,SAAS,EAAC;QAAe;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNX,OAAA;MAAAM,QAAA,gBACIN,OAAA;QAAAM,QAAA,GAAQJ,KAAK,CAACK,WAAW,EAAC,aAAW;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7CX,OAAA;QAAKK,SAAS,EAAC,oBAAoB;QAAAC,QAAA,eAC/BN,OAAA,CAACF,aAAa;UAAAQ,QAAA,EAAEF,MAAM,CAACF,KAAK,CAACW,KAAK;QAAC;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd;AAACR,EAAA,CAtBuBF,aAAa;EAAA,QAEhBJ,gBAAgB;AAAA;AAAAkB,EAAA,GAFbd,aAAa;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}