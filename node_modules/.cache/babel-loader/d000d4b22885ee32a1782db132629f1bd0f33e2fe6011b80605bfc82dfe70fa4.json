{"ast":null,"code":"var _jsxFileName = \"/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/genres/CreateGenre.tsx\",\n  _s = $RefreshSig$();\nimport { Form, Formik } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport Button from \"../utils/Button\";\nimport * as Yup from \"yup\";\nimport TextField from \"../forms/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateGenre() {\n  _s();\n  const history = useNavigate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: \"\"\n      },\n      onSubmit: async value => {\n        // when the form is posted\n        await new Promise(r => setTimeout(r, 3000));\n        console.log(value);\n      },\n      validationSchema: Yup.object({\n        name: Yup.string().required(\"Thies field is required\").firstLetterUppercase()\n      }),\n      children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          field: \"name\",\n          displayName: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: formikProps.isSubmitting,\n          type: \"submit\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn btn-secondary\",\n          to: \"/genres\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(CreateGenre, \"UuBpJaL/77ixlr0CeL0xEoy8mog=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateGenre;\nvar _c;\n$RefreshReg$(_c, \"CreateGenre\");","map":{"version":3,"names":["Form","Formik","Link","useNavigate","Button","Yup","TextField","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateGenre","_s","history","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","name","onSubmit","value","Promise","r","setTimeout","console","log","validationSchema","object","string","required","firstLetterUppercase","formikProps","field","displayName","disabled","isSubmitting","type","className","to","_c","$RefreshReg$"],"sources":["/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/genres/CreateGenre.tsx"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport Button from \"../utils/Button\";\nimport * as Yup from \"yup\";\nimport TextField from \"../forms/TextField\";\n\nexport default function CreateGenre() {\n  const history = useNavigate();\n  return (\n    <>\n      <h3>Create Genre</h3>\n\n      <Formik\n        initialValues={{\n          name: \"\",\n        }}\n        onSubmit={async value => {\n          // when the form is posted\n          await new Promise(r => setTimeout(r, 3000));\n          console.log(value);\n        }}\n        validationSchema={Yup.object({\n          name: Yup.string()\n            .required(\"Thies field is required\")\n            .firstLetterUppercase(),\n        })}\n      >\n        {(formikProps) => (\n          <Form>\n            <TextField field=\"name\" displayName=\"Name\" />\n\n            <Button disabled={formikProps.isSubmitting} type=\"submit\">Save Changes</Button>\n            <Link className=\"btn btn-secondary\" to=\"/genres\">\n              Cancel\n            </Link>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n"],"mappings":";;AAAA,SAA8BA,IAAI,EAAEC,MAAM,QAAQ,QAAQ;AAC1D,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,SAAS,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAMC,OAAO,GAAGV,WAAW,CAAC,CAAC;EAC7B,oBACEK,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACEN,OAAA;MAAAM,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErBV,OAAA,CAACP,MAAM;MACLkB,aAAa,EAAE;QACbC,IAAI,EAAE;MACR,CAAE;MACFC,QAAQ,EAAE,MAAMC,KAAK,IAAI;QACvB;QACA,MAAM,IAAIC,OAAO,CAACC,CAAC,IAAIC,UAAU,CAACD,CAAC,EAAE,IAAI,CAAC,CAAC;QAC3CE,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;MACpB,CAAE;MACFM,gBAAgB,EAAEvB,GAAG,CAACwB,MAAM,CAAC;QAC3BT,IAAI,EAAEf,GAAG,CAACyB,MAAM,CAAC,CAAC,CACfC,QAAQ,CAAC,yBAAyB,CAAC,CACnCC,oBAAoB,CAAC;MAC1B,CAAC,CAAE;MAAAlB,QAAA,EAEDmB,WAAW,iBACXzB,OAAA,CAACR,IAAI;QAAAc,QAAA,gBACHN,OAAA,CAACF,SAAS;UAAC4B,KAAK,EAAC,MAAM;UAACC,WAAW,EAAC;QAAM;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAE7CV,OAAA,CAACJ,MAAM;UAACgC,QAAQ,EAAEH,WAAW,CAACI,YAAa;UAACC,IAAI,EAAC,QAAQ;UAAAxB,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC/EV,OAAA,CAACN,IAAI;UAACqC,SAAS,EAAC,mBAAmB;UAACC,EAAE,EAAC,SAAS;UAAA1B,QAAA,EAAC;QAEjD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA,eACT,CAAC;AAEP;AAACN,EAAA,CAlCuBD,WAAW;EAAA,QACjBR,WAAW;AAAA;AAAAsC,EAAA,GADL9B,WAAW;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}