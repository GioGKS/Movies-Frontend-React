{"ast":null,"code":"var _jsxFileName = \"/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/auth/Login.tsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport AuthForm from './AuthForm';\nimport { urlAccounts } from '../endpoints';\nimport { useContext, useState } from 'react';\nimport DisplayErrors from '../utils/DisplayErrors';\nimport { getClaims, saveToken } from './handleJWT';\nimport AuthenticationContext from './AuthenticationContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [errors, setErrors] = useState([]);\n  const {\n    update\n  } = useContext(AuthenticationContext);\n  const history = useNavigate();\n  async function login(credentials) {\n    try {\n      setErrors([]);\n      const response = await axios.post(`${urlAccounts}/login`, credentials);\n      saveToken(response.data);\n      update(getClaims());\n      history('/');\n    } catch (error) {\n      setErrors(error.response.data);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DisplayErrors, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AuthForm, {\n      model: {\n        email: '',\n        password: ''\n      },\n      onSubmit: async values => await login(values)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Login, \"hsWaqnarG2SQPcthfq26FwpVIMo=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["axios","AuthForm","urlAccounts","useContext","useState","DisplayErrors","getClaims","saveToken","AuthenticationContext","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","errors","setErrors","update","history","login","credentials","response","post","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","model","email","password","onSubmit","values","_c","$RefreshReg$"],"sources":["/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/auth/Login.tsx"],"sourcesContent":["import axios from 'axios';\nimport { authenticationResponse, userCredentials } from './auth.models';\nimport AuthForm from './AuthForm';\nimport {urlAccounts} from '../endpoints';\nimport { useContext, useState } from 'react';\nimport DisplayErrors from '../utils/DisplayErrors';\nimport { getClaims, saveToken } from './handleJWT';\nimport AuthenticationContext from './AuthenticationContext';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Login(){\n\n    const [errors, setErrors] = useState<string[]>([]);\n    const {update} = useContext(AuthenticationContext);\n    const history = useNavigate();\n\n    async function login(credentials: userCredentials){\n        try {\n            setErrors([]);\n            const response = await axios\n            .post<authenticationResponse>(`${urlAccounts}/login`, credentials);\n            saveToken(response.data);\n            update(getClaims());\n            history('/');\n        }\n        catch (error:any){\n            setErrors(error.response.data);\n        }\n    }\n\n    return (\n        <>\n            <h3>Login</h3>\n            <DisplayErrors errors={errors} />\n            <AuthForm model={{email: '', password: ''}}\n             onSubmit={async values => await login(values)}\n            />\n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAAQC,WAAW,QAAO,cAAc;AACxC,SAASC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,OAAOC,aAAa,MAAM,wBAAwB;AAClD,SAASC,SAAS,EAAEC,SAAS,QAAQ,aAAa;AAClD,OAAOC,qBAAqB,MAAM,yBAAyB;AAC3D,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,eAAe,SAASC,KAAKA,CAAA,EAAE;EAAAC,EAAA;EAE3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAW,EAAE,CAAC;EAClD,MAAM;IAACc;EAAM,CAAC,GAAGf,UAAU,CAACK,qBAAqB,CAAC;EAClD,MAAMW,OAAO,GAAGV,WAAW,CAAC,CAAC;EAE7B,eAAeW,KAAKA,CAACC,WAA4B,EAAC;IAC9C,IAAI;MACAJ,SAAS,CAAC,EAAE,CAAC;MACb,MAAMK,QAAQ,GAAG,MAAMtB,KAAK,CAC3BuB,IAAI,CAA0B,GAAErB,WAAY,QAAO,EAAEmB,WAAW,CAAC;MAClEd,SAAS,CAACe,QAAQ,CAACE,IAAI,CAAC;MACxBN,MAAM,CAACZ,SAAS,CAAC,CAAC,CAAC;MACnBa,OAAO,CAAC,GAAG,CAAC;IAChB,CAAC,CACD,OAAOM,KAAS,EAAC;MACbR,SAAS,CAACQ,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC;IAClC;EACJ;EAEA,oBACIb,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdnB,OAAA,CAACN,aAAa;MAACW,MAAM,EAAEA;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCnB,OAAA,CAACV,QAAQ;MAAC8B,KAAK,EAAE;QAACC,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAE,CAAE;MAC1CC,QAAQ,EAAE,MAAMC,MAAM,IAAI,MAAMf,KAAK,CAACe,MAAM;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA,eACJ,CAAC;AAEX;AAACf,EAAA,CA7BuBD,KAAK;EAAA,QAITL,WAAW;AAAA;AAAA2B,EAAA,GAJPtB,KAAK;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}