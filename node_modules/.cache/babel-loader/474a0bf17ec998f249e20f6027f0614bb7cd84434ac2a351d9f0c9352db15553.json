{"ast":null,"code":"var _jsxFileName = \"/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/movies/CreateMovie.tsx\";\nimport MovieForm from \"./MovieForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateMovie() {\n  const nonSelectedGenres = [{\n    id: 1,\n    name: \"Comedy\"\n  }, {\n    id: 2,\n    name: \"Drama\"\n  }];\n  const nonSelectedMovieTheaters = [{\n    id: 1,\n    name: \"Sambil\"\n  }, {\n    id: 2,\n    name: \"Agora\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieForm, {\n      model: {\n        title: \"\",\n        inTheaters: false,\n        trailer: ''\n      },\n      onSubmit: values => console.log(values),\n      selectedGenres: [],\n      nonSelectedGenres: nonSelectedGenres,\n      nonSelectedMovieTheaters: nonSelectedMovieTheaters,\n      selectedMovieTheaters: []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = CreateMovie;\nvar _c;\n$RefreshReg$(_c, \"CreateMovie\");","map":{"version":3,"names":["MovieForm","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateMovie","nonSelectedGenres","id","name","nonSelectedMovieTheaters","children","fileName","_jsxFileName","lineNumber","columnNumber","model","title","inTheaters","trailer","onSubmit","values","console","log","selectedGenres","selectedMovieTheaters","_c","$RefreshReg$"],"sources":["/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/movies/CreateMovie.tsx"],"sourcesContent":["import { genreDTO } from \"../genres/genres.mode\";\nimport { movieTheaterDTO } from \"../movietheaters/movieTheater.model\";\nimport MovieForm from \"./MovieForm\";\n\nexport default function CreateMovie() {\n  const nonSelectedGenres: genreDTO[] = [\n    { id: 1, name: \"Comedy\" },\n    { id: 2, name: \"Drama\" },\n  ];\n\n  const nonSelectedMovieTheaters: movieTheaterDTO[] = [\n    { id: 1, name: \"Sambil\" },\n    { id: 2, name: \"Agora\" },\n  ];\n\n  return (\n    <>\n      <h3>Edit Movie</h3>\n      <MovieForm\n        model={{\n          title: \"\",\n          inTheaters: false,\n          trailer: '',\n          \n        }}\n        onSubmit={(values) => console.log(values)}\n        selectedGenres={[]}\n        nonSelectedGenres={nonSelectedGenres}\n\n        nonSelectedMovieTheaters={nonSelectedMovieTheaters}\n        selectedMovieTheaters={[]}\n      />\n    </>\n  );\n}\n"],"mappings":";AAEA,OAAOA,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,eAAe,SAASC,WAAWA,CAAA,EAAG;EACpC,MAAMC,iBAA6B,GAAG,CACpC;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAS,CAAC,EACzB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAQ,CAAC,CACzB;EAED,MAAMC,wBAA2C,GAAG,CAClD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAS,CAAC,EACzB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAQ,CAAC,CACzB;EAED,oBACEN,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBZ,OAAA,CAACF,SAAS;MACRe,KAAK,EAAE;QACLC,KAAK,EAAE,EAAE;QACTC,UAAU,EAAE,KAAK;QACjBC,OAAO,EAAE;MAEX,CAAE;MACFC,QAAQ,EAAGC,MAAM,IAAKC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAE;MAC1CG,cAAc,EAAE,EAAG;MACnBjB,iBAAiB,EAAEA,iBAAkB;MAErCG,wBAAwB,EAAEA,wBAAyB;MACnDe,qBAAqB,EAAE;IAAG;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAAA,eACF,CAAC;AAEP;AAACW,EAAA,GA9BuBpB,WAAW;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}