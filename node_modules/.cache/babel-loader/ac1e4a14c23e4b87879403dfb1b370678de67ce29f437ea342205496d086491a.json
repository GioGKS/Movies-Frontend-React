{"ast":null,"code":"var _jsxFileName = \"/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/movies/MoviesList.tsx\";\nimport IndividualMovie from \"./IndividualMovie\";\nimport css from \"./MoviesList.module.css\";\nimport GenericList from \"./../utils/GenericList\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MoviesList(props) {\n  var _props$movies;\n  return /*#__PURE__*/_jsxDEV(GenericList, {\n    list: props.movies,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.div,\n      children: (_props$movies = props.movies) === null || _props$movies === void 0 ? void 0 : _props$movies.map(movie => /*#__PURE__*/_createElement(IndividualMovie, {\n        ...movie,\n        key: movie.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = MoviesList;\nvar _c;\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"names":["IndividualMovie","css","GenericList","createElement","_createElement","jsxDEV","_jsxDEV","MoviesList","props","_props$movies","list","movies","children","className","div","map","movie","key","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/movies/MoviesList.tsx"],"sourcesContent":["import IndividualMovie from \"./IndividualMovie\";\nimport { movieDTO } from \"./movies.model\";\nimport css from \"./MoviesList.module.css\";\nimport GenericList from \"./../utils/GenericList\";\n\nexport default function MoviesList(props: moviesListProps) {\n  return (\n    <GenericList list={props.movies}>\n      <div className={css.div}>\n        {props.movies?.map((movie) => (\n          <IndividualMovie {...movie} key={movie.id} />\n        ))}\n      </div>\n    </GenericList>\n  );\n}\n\ninterface moviesListProps {\n  movies?: movieDTO[];\n}\n"],"mappings":";AAAA,OAAOA,eAAe,MAAM,mBAAmB;AAE/C,OAAOC,GAAG,MAAM,yBAAyB;AACzC,OAAOC,WAAW,MAAM,wBAAwB;AAAC,SAAAC,aAAA,IAAAC,cAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,eAAe,SAASC,UAAUA,CAACC,KAAsB,EAAE;EAAA,IAAAC,aAAA;EACzD,oBACEH,OAAA,CAACJ,WAAW;IAACQ,IAAI,EAAEF,KAAK,CAACG,MAAO;IAAAC,QAAA,eAC9BN,OAAA;MAAKO,SAAS,EAAEZ,GAAG,CAACa,GAAI;MAAAF,QAAA,GAAAH,aAAA,GACrBD,KAAK,CAACG,MAAM,cAAAF,aAAA,uBAAZA,aAAA,CAAcM,GAAG,CAAEC,KAAK,iBACvBZ,cAAA,CAACJ,eAAe;QAAA,GAAKgB,KAAK;QAAEC,GAAG,EAAED,KAAK,CAACE,EAAG;QAAAC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAC7C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAElB;AAACC,EAAA,GAVuBlB,UAAU;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}