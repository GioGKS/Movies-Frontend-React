{"ast":null,"code":"var _jsxFileName = \"/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/genres/CreateGenre.tsx\";\nimport axios from 'axios';\nimport { urlGenres } from '../endpoints';\nimport GenreForm from './GenreForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateGenre() {\n  // const history = useHistory();\n\n  async function create(genre) {\n    try {\n      await axios.post(urlGenres, genre);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GenreForm, {\n      model: {\n        name: ''\n      },\n      onSubmit: async value => {\n        // when the form is posted\n        await new Promise(r => setTimeout(r, 1));\n        console.log(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = CreateGenre;\nvar _c;\n$RefreshReg$(_c, \"CreateGenre\");","map":{"version":3,"names":["axios","urlGenres","GenreForm","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateGenre","create","genre","post","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","model","name","onSubmit","value","Promise","r","setTimeout","log","_c","$RefreshReg$"],"sources":["/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/genres/CreateGenre.tsx"],"sourcesContent":["import axios from 'axios';\nimport { urlGenres } from '../endpoints';\nimport GenreForm from './GenreForm';\nimport { genreCreationDTO } from './genres.mode';\n\nexport default function CreateGenre() {\n    // const history = useHistory();\n\n    async function create(genre: genreCreationDTO){\n        try{\n            await axios.post(urlGenres, genre)\n        }\n        catch (error) {\n            console.error(error)\n        }\n    }\n\n\n    return (\n        <>\n            <h3>Create Genre</h3>\n            <GenreForm model={{ name: '' }}\n                onSubmit={async value => {\n                    // when the form is posted\n                    await new Promise(r => setTimeout(r, 1));\n                    console.log(value);\n                }}\n            />\n        </>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGpC,eAAe,SAASC,WAAWA,CAAA,EAAG;EAClC;;EAEA,eAAeC,MAAMA,CAACC,KAAuB,EAAC;IAC1C,IAAG;MACC,MAAMT,KAAK,CAACU,IAAI,CAACT,SAAS,EAAEQ,KAAK,CAAC;IACtC,CAAC,CACD,OAAOE,KAAK,EAAE;MACVC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ;EAGA,oBACIP,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACIT,OAAA;MAAAS,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBb,OAAA,CAACF,SAAS;MAACgB,KAAK,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAE;MAC3BC,QAAQ,EAAE,MAAMC,KAAK,IAAI;QACrB;QACA,MAAM,IAAIC,OAAO,CAACC,CAAC,IAAIC,UAAU,CAACD,CAAC,EAAE,CAAC,CAAC,CAAC;QACxCX,OAAO,CAACa,GAAG,CAACJ,KAAK,CAAC;MACtB;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA,eACJ,CAAC;AAEX;AAACS,EAAA,GAzBuBnB,WAAW;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}