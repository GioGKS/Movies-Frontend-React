{"ast":null,"code":"var _jsxFileName = \"/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/movies/EditMovie.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { urlMovies } from \"../endpoints\";\nimport { convertMovieToFormData } from \"../utils/formDataUtils\";\nimport Loading from \"../utils/Loading\";\nimport MovieForm from \"./MovieForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditMovie() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState();\n  const [moviePutGet, setMoviePutGet] = useState();\n  const history = useNavigate();\n  const [errors, setErrors] = useState([]);\n  useEffect(() => {\n    axios.get(`${urlMovies}/PutGet/${id}`).then(response => {\n      const model = {\n        title: response.data.movie.title,\n        inTheaters: response.data.movie.inTheaters,\n        trailer: response.data.movie.trailer,\n        posterURL: response.data.movie.poster,\n        summary: response.data.movie.summary,\n        releaseDate: new Date(response.data.movie.releaseDate)\n      };\n      setMovie(model);\n      setMoviePutGet(response.data);\n    });\n  }, [id]);\n  async function edit(movieToEdit) {\n    try {\n      const formData = convertMovieToFormData(movieToEdit);\n      await axios({\n        method: \"put\",\n        url: `${urlMovies}/${id}`,\n        data: formData,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      history(`/movie/${id}`);\n    } catch (error) {\n      setErrors(error.response.data);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), movie && moviePutGet ? /*#__PURE__*/_jsxDEV(MovieForm, {\n      model: movie,\n      onSubmit: async values => await edit(values),\n      nonSelectedGenres: moviePutGet.nonSelectedGenres,\n      selectedGenres: moviePutGet.selectedGenres,\n      nonSelectedMovieTheaters: moviePutGet.nonSelectedMovieTheaters,\n      selectedMovieTheaters: moviePutGet.selectedMovieTheaters,\n      selectedActors: moviePutGet.actors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(EditMovie, \"Cj6WPa4JO7QAktWvTDA2gPhnhiE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditMovie;\nvar _c;\n$RefreshReg$(_c, \"EditMovie\");","map":{"version":3,"names":["axios","useEffect","useState","useNavigate","useParams","urlMovies","convertMovieToFormData","Loading","MovieForm","jsxDEV","_jsxDEV","Fragment","_Fragment","EditMovie","_s","id","movie","setMovie","moviePutGet","setMoviePutGet","history","errors","setErrors","get","then","response","model","title","data","inTheaters","trailer","posterURL","poster","summary","releaseDate","Date","edit","movieToEdit","formData","method","url","headers","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","values","nonSelectedGenres","selectedGenres","nonSelectedMovieTheaters","selectedMovieTheaters","selectedActors","actors","_c","$RefreshReg$"],"sources":["/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/movies/EditMovie.tsx"],"sourcesContent":["import axios, { AxiosResponse } from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { urlMovies } from \"../endpoints\";\nimport DisplayErrors from \"../utils/DisplayErrors\";\nimport { convertMovieToFormData } from \"../utils/formDataUtils\";\nimport Loading from \"../utils/Loading\";\nimport MovieForm from \"./MovieForm\";\nimport { movieCreationDTO, moviePutGetDTO } from \"./movies.model\";\n\nexport default function EditMovie() {\n  const { id }: any = useParams();\n  const [movie, setMovie] = useState<movieCreationDTO>();\n  const [moviePutGet, setMoviePutGet] = useState<moviePutGetDTO>();\n  const history = useNavigate();\n  const [errors, setErrors] = useState<string[]>([]);\n\n  useEffect(() => {\n    axios\n      .get(`${urlMovies}/PutGet/${id}`)\n      .then((response: AxiosResponse<moviePutGetDTO>) => {\n        const model: movieCreationDTO = {\n          title: response.data.movie.title,\n          inTheaters: response.data.movie.inTheaters,\n          trailer: response.data.movie.trailer,\n          posterURL: response.data.movie.poster,\n          summary: response.data.movie.summary,\n          releaseDate: new Date(response.data.movie.releaseDate),\n        };\n\n        setMovie(model);\n        setMoviePutGet(response.data);\n      });\n  }, [id]);\n\n  async function edit(movieToEdit: movieCreationDTO) {\n    try {\n      const formData = convertMovieToFormData(movieToEdit);\n      await axios({\n        method: \"put\",\n        url: `${urlMovies}/${id}`,\n        data: formData,\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n      history(`/movie/${id}`);\n    } catch (error: any) {\n      setErrors(error.response.data);\n    }\n  }\n\n  return (\n    <>\n      <h3>Edit Movie</h3>\n      {movie && moviePutGet ? (\n        <MovieForm\n          model={movie}\n          onSubmit={async (values) => await edit(values)}\n          nonSelectedGenres={moviePutGet.nonSelectedGenres}\n          selectedGenres={moviePutGet.selectedGenres}\n          nonSelectedMovieTheaters={moviePutGet.nonSelectedMovieTheaters}\n          selectedMovieTheaters={moviePutGet.selectedMovieTheaters}\n          selectedActors={moviePutGet.actors}\n        />\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}