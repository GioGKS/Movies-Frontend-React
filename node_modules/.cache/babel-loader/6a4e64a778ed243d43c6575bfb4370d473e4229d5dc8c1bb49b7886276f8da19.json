{"ast":null,"code":"var _jsxFileName = \"/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/forms/TypeAheadActors.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\";\nimport { urlActors } from \"../endpoints\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TypeAheadActors(props) {\n  _s();\n  const [actors, setActors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const selected = [];\n  const [draggedElement, setDraggedElement] = useState(undefined);\n  function handleSearch(query) {\n    setIsLoading(true);\n    axios.get(`${urlActors}/searchByName/${query}`).then(response => {\n      setActors(response.data);\n      setIsLoading(false);\n    });\n  }\n  function handleDragStart(actor) {\n    setDraggedElement(actor);\n  }\n  function handleDragOver(actor) {\n    if (!draggedElement) {\n      return;\n    }\n    if (actor.id !== draggedElement.id) {\n      const draggedElementIndex = props.actors.findIndex(x => x.id === draggedElement.id);\n      const actorIndex = props.actors.findIndex(x => x.id === actor.id);\n      const actors = [...props.actors];\n      actors[actorIndex] = draggedElement;\n      actors[draggedElementIndex] = actor;\n      props.onAdd(actors);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: props.displayName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AsyncTypeahead, {\n      id: \"typeahead\",\n      onChange: actors => {\n        if (props.actors.findIndex(x => x.id === actors[0].id) === -1) {\n          actors[0].character = \"\";\n          props.onAdd([...props.actors, actors[0]]);\n        }\n      },\n      options: actors,\n      labelKey: actor => actor.name,\n      filterBy: () => true,\n      isLoading: isLoading,\n      onSearch: handleSearch,\n      placeholder: \"Write the name of the actor...\",\n      minLength: 1,\n      flip: true,\n      selected: selected,\n      renderMenuItemChildren: actor => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"actor\",\n          src: actor.picture,\n          style: {\n            height: \"64px\",\n            marginRight: \"10px\",\n            width: \"64px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: actor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: props.actors.map(actor => /*#__PURE__*/_jsxDEV(\"li\", {\n        draggable: true,\n        onDragStart: () => handleDragStart(actor),\n        onDragOver: () => handleDragOver(actor),\n        className: \"list-group-item list-group-item-action\",\n        children: [props.listUI(actor), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge badge-primary badge-pill pointer text-dark\",\n          style: {\n            marginLeft: \"0.5rem\"\n          },\n          onClick: () => props.onRemove(actor),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, actor.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(TypeAheadActors, \"ojYgudzOJ2RAoJIvauxwt7lgmwo=\");\n_c = TypeAheadActors;\nvar _c;\n$RefreshReg$(_c, \"TypeAheadActors\");","map":{"version":3,"names":["axios","useState","AsyncTypeahead","urlActors","jsxDEV","_jsxDEV","Fragment","_Fragment","TypeAheadActors","props","_s","actors","setActors","isLoading","setIsLoading","selected","draggedElement","setDraggedElement","undefined","handleSearch","query","get","then","response","data","handleDragStart","actor","handleDragOver","id","draggedElementIndex","findIndex","x","actorIndex","onAdd","className","children","displayName","fileName","_jsxFileName","lineNumber","columnNumber","onChange","character","options","labelKey","name","filterBy","onSearch","placeholder","minLength","flip","renderMenuItemChildren","alt","src","picture","style","height","marginRight","width","map","draggable","onDragStart","onDragOver","listUI","marginLeft","onClick","onRemove","_c","$RefreshReg$"],"sources":["/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/forms/TypeAheadActors.tsx"],"sourcesContent":["import axios, { AxiosResponse } from \"axios\";\nimport { ReactElement, useState } from \"react\";\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\";\nimport { actorMovieDTO } from \"../actors/actors.mode\";\nimport { urlActors } from \"../endpoints\";\n\nexport default function TypeAheadActors(props: typeAheadActorsProps) {\n  const [actors, setActors] = useState<actorMovieDTO[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const selected: actorMovieDTO[] = [];\n\n  const [draggedElement, setDraggedElement] = useState<\n    actorMovieDTO | undefined\n  >(undefined);\n\n  function handleSearch(query: string) {\n    setIsLoading(true);\n    axios\n      .get(`${urlActors}/searchByName/${query}`)\n      .then((response: AxiosResponse<actorMovieDTO[]>) => {\n        setActors(response.data);\n        setIsLoading(false);\n      });\n  }\n\n  function handleDragStart(actor: actorMovieDTO) {\n    setDraggedElement(actor);\n  }\n\n  function handleDragOver(actor: actorMovieDTO) {\n    if (!draggedElement) {\n      return;\n    }\n\n    if (actor.id !== draggedElement.id) {\n      const draggedElementIndex = props.actors.findIndex(\n        (x) => x.id === draggedElement.id\n      );\n      const actorIndex = props.actors.findIndex((x) => x.id === actor.id);\n\n      const actors = [...props.actors];\n      actors[actorIndex] = draggedElement;\n      actors[draggedElementIndex] = actor;\n      props.onAdd(actors);\n    }\n  }\n\n  return (\n    <div className=\"mb-3\">\n      <label>{props.displayName}</label>\n      <AsyncTypeahead\n        id=\"typeahead\"\n        onChange={(actors) => {\n          if (props.actors.findIndex((x) => x.id === actors[0].id) === -1) {\n            actors[0].character = \"\";\n            props.onAdd([...props.actors, actors[0]]);\n          }\n        }}\n        options={actors}\n        labelKey={(actor) => actor.name}\n        filterBy={() => true}\n        isLoading={isLoading}\n        onSearch={handleSearch}\n        placeholder=\"Write the name of the actor...\"\n        minLength={1}\n        flip={true}\n        selected={selected}\n        renderMenuItemChildren={(actor) => (\n          <>\n            <img\n              alt=\"actor\"\n              src={actor.picture}\n              style={{\n                height: \"64px\",\n                marginRight: \"10px\",\n                width: \"64px\",\n              }}\n            />\n            <span>{actor.name}</span>\n          </>\n        )}\n      />\n\n      <ul className=\"list-group\">\n        {props.actors.map((actor) => (\n          <li\n            key={actor.id}\n            draggable={true}\n            onDragStart={() => handleDragStart(actor)}\n            onDragOver={() => handleDragOver(actor)}\n            className=\"list-group-item list-group-item-action\"\n          >\n            {props.listUI(actor)}\n            <span\n              className=\"badge badge-primary badge-pill pointer text-dark\"\n              style={{ marginLeft: \"0.5rem\" }}\n              onClick={() => props.onRemove(actor)}\n            >\n              X\n            </span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\ninterface typeAheadActorsProps {\n  displayName: string;\n  actors: actorMovieDTO[];\n  onAdd(actors: actorMovieDTO[]): void;\n  onRemove(actor: actorMovieDTO): void;\n  listUI(actor: actorMovieDTO): ReactElement;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}