{"ast":null,"code":"const tokenKey = 'token';\nconst expirationKey = 'token-expiration';\nexport function saveToken(authData) {\n  localStorage.setItem(tokenKey, authData.token);\n  localStorage.setItem(expirationKey, authData.expiration.toString());\n}\nexport function getClaims() {\n  const token = localStorage.getItem(tokenKey);\n  if (!token) {\n    return [];\n  }\n  const expiration = localStorage.getItem(expirationKey);\n  const expirationDate = new Date(expiration);\n  if (expirationDate <= new Date()) {\n    logout();\n    return []; // the token has expired\n  }\n\n  const dataToken = JSON.parse(atob(token.split('.')[1]));\n  const response = [];\n  for (const property in dataToken) {\n    response.push({\n      name: property,\n      value: dataToken[property]\n    });\n  }\n  return response;\n}\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n  localStorage.removeItem(expirationKey);\n}\nexport function getToken() {\n  return localStorage.getItem(tokenKey);\n}","map":{"version":3,"names":["tokenKey","expirationKey","saveToken","authData","localStorage","setItem","token","expiration","toString","getClaims","getItem","expirationDate","Date","logout","dataToken","JSON","parse","atob","split","response","property","push","name","value","removeItem","getToken"],"sources":["/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/auth/handleJWT.ts"],"sourcesContent":["import {authenticationResponse, claim} from './auth.models';\n\nconst tokenKey = 'token';\nconst expirationKey = 'token-expiration'\n\nexport function saveToken(authData: authenticationResponse){\n    localStorage.setItem(tokenKey, authData.token);\n    localStorage.setItem(expirationKey, authData.expiration.toString());\n}\n\nexport function getClaims(): claim[]{\n    const token = localStorage.getItem(tokenKey);\n\n    if (!token){\n        return [];\n    }\n\n    const expiration = localStorage.getItem(expirationKey)!;\n    const expirationDate = new Date(expiration);\n\n    if (expirationDate <= new Date()){\n        logout();\n        return []; // the token has expired\n    }\n\n    const dataToken = JSON.parse(atob(token.split('.')[1]));\n    const response: claim[] = [];\n    for (const property in dataToken){\n        response.push({name: property, value: dataToken[property]});\n    }\n\n    return response;\n}\n\nexport function logout(){\n    localStorage.removeItem(tokenKey);\n    localStorage.removeItem(expirationKey);\n}\n\nexport function getToken(){\n    return localStorage.getItem(tokenKey);\n}"],"mappings":"AAEA,MAAMA,QAAQ,GAAG,OAAO;AACxB,MAAMC,aAAa,GAAG,kBAAkB;AAExC,OAAO,SAASC,SAASA,CAACC,QAAgC,EAAC;EACvDC,YAAY,CAACC,OAAO,CAACL,QAAQ,EAAEG,QAAQ,CAACG,KAAK,CAAC;EAC9CF,YAAY,CAACC,OAAO,CAACJ,aAAa,EAAEE,QAAQ,CAACI,UAAU,CAACC,QAAQ,CAAC,CAAC,CAAC;AACvE;AAEA,OAAO,SAASC,SAASA,CAAA,EAAW;EAChC,MAAMH,KAAK,GAAGF,YAAY,CAACM,OAAO,CAACV,QAAQ,CAAC;EAE5C,IAAI,CAACM,KAAK,EAAC;IACP,OAAO,EAAE;EACb;EAEA,MAAMC,UAAU,GAAGH,YAAY,CAACM,OAAO,CAACT,aAAa,CAAE;EACvD,MAAMU,cAAc,GAAG,IAAIC,IAAI,CAACL,UAAU,CAAC;EAE3C,IAAII,cAAc,IAAI,IAAIC,IAAI,CAAC,CAAC,EAAC;IAC7BC,MAAM,CAAC,CAAC;IACR,OAAO,EAAE,CAAC,CAAC;EACf;;EAEA,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACX,KAAK,CAACY,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACvD,MAAMC,QAAiB,GAAG,EAAE;EAC5B,KAAK,MAAMC,QAAQ,IAAIN,SAAS,EAAC;IAC7BK,QAAQ,CAACE,IAAI,CAAC;MAACC,IAAI,EAAEF,QAAQ;MAAEG,KAAK,EAAET,SAAS,CAACM,QAAQ;IAAC,CAAC,CAAC;EAC/D;EAEA,OAAOD,QAAQ;AACnB;AAEA,OAAO,SAASN,MAAMA,CAAA,EAAE;EACpBT,YAAY,CAACoB,UAAU,CAACxB,QAAQ,CAAC;EACjCI,YAAY,CAACoB,UAAU,CAACvB,aAAa,CAAC;AAC1C;AAEA,OAAO,SAASwB,QAAQA,CAAA,EAAE;EACtB,OAAOrB,YAAY,CAACM,OAAO,CAACV,QAAQ,CAAC;AACzC"},"metadata":{},"sourceType":"module","externalDependencies":[]}