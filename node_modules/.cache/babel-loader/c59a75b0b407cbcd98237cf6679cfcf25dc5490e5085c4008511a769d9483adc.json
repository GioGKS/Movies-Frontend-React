{"ast":null,"code":"var _jsxFileName = \"/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/movies/EditMovie.tsx\";\nimport MovieForm from \"./MovieForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditMovie() {\n  const nonSelectedGenres = [{\n    id: 1,\n    name: 'Comedy'\n  }, {\n    id: 2,\n    name: 'Drama'\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieForm, {\n      model: {\n        title: \"Toy Story\",\n        inTheaters: true,\n        trailer: \"url\",\n        releaseDate: new Date('2019-01-01T00:00:00')\n      },\n      onSubmit: values => console.log(values),\n      selectedGenres: [],\n      nonSelectedGenres: nonSelectedGenres\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = EditMovie;\nvar _c;\n$RefreshReg$(_c, \"EditMovie\");","map":{"version":3,"names":["MovieForm","jsxDEV","_jsxDEV","Fragment","_Fragment","EditMovie","nonSelectedGenres","id","name","children","fileName","_jsxFileName","lineNumber","columnNumber","model","title","inTheaters","trailer","releaseDate","Date","onSubmit","values","console","log","selectedGenres","_c","$RefreshReg$"],"sources":["/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/movies/EditMovie.tsx"],"sourcesContent":["import { genreDTO } from \"../genres/genres.mode\";\nimport MovieForm from \"./MovieForm\";\n\nexport default function EditMovie() {\n\n  const nonSelectedGenres: genreDTO[] = [{id: 1, name:'Comedy'}, {id: 2, name: 'Drama'}]\n\n  return (\n    <>\n      <h3>Edit Movie</h3>\n      <MovieForm\n        model={{ title: \"Toy Story\", inTheaters: true, trailer: \"url\", releaseDate: new Date('2019-01-01T00:00:00') }}\n        onSubmit={(values) => console.log(values)} selectedGenres={[]} nonSelectedGenres={nonSelectedGenres}  />\n    </>\n  );\n} \n"],"mappings":";AACA,OAAOA,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,eAAe,SAASC,SAASA,CAAA,EAAG;EAElC,MAAMC,iBAA6B,GAAG,CAAC;IAACC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAC;EAAQ,CAAC,EAAE;IAACD,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAO,CAAC,CAAC;EAEtF,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBX,OAAA,CAACF,SAAS;MACRc,KAAK,EAAE;QAAEC,KAAK,EAAE,WAAW;QAAEC,UAAU,EAAE,IAAI;QAAEC,OAAO,EAAE,KAAK;QAAEC,WAAW,EAAE,IAAIC,IAAI,CAAC,qBAAqB;MAAE,CAAE;MAC9GC,QAAQ,EAAGC,MAAM,IAAKC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAE;MAACG,cAAc,EAAE,EAAG;MAAClB,iBAAiB,EAAEA;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA,eAC1G,CAAC;AAEP;AAACY,EAAA,GAZuBpB,SAAS;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}