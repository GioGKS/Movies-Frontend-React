{"ast":null,"code":"var _jsxFileName = \"/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/movietheaters/MovieTheaterForm.tsx\";\nimport { Form, Formik } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport TextField from \"../forms/TextField\";\nimport Button from \"../utils/Button\";\nimport * as Yup from \"yup\";\nimport Map from \"../utils/Map\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieThaterForm(props) {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: props.model,\n    onSubmit: props.onSubmit,\n    validationSchema: Yup.object({\n      name: Yup.string().required(\"This field is required\").firstLetterUppercase()\n    }),\n    children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        displayName: \"Name\",\n        field: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"1rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: formikProps.isSubmitting,\n        type: \"submit\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn btn-secondary\",\n        to: \"/movietheaters\",\n        children: \"cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = MovieThaterForm;\nvar _c;\n$RefreshReg$(_c, \"MovieThaterForm\");","map":{"version":3,"names":["Form","Formik","Link","TextField","Button","Yup","Map","jsxDEV","_jsxDEV","MovieThaterForm","props","initialValues","model","onSubmit","validationSchema","object","name","string","required","firstLetterUppercase","children","formikProps","displayName","field","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","disabled","isSubmitting","type","className","to","_c","$RefreshReg$"],"sources":["/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/movietheaters/MovieTheaterForm.tsx"],"sourcesContent":["import { Form, Formik, FormikHelpers } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport TextField from \"../forms/TextField\";\nimport Button from \"../utils/Button\";\nimport { movieTheaterCreationDTO } from \"./movieTheater.model\";\nimport * as Yup from \"yup\";\nimport Map from \"../utils/Map\";\n\nexport default function MovieThaterForm(props: movieTheaterForm) {\n  return (\n    <Formik\n      initialValues={props.model}\n      onSubmit={props.onSubmit}\n      validationSchema={Yup.object({\n        name: Yup.string()\n          .required(\"This field is required\")\n          .firstLetterUppercase(),\n      })}\n    >\n      {(formikProps) => (\n        <Form>\n          <TextField displayName=\"Name\" field=\"name\" />\n\n          <div style={{ marginBottom: \"1rem\" }}>\n            <Map />\n          </div>\n\n          <Button disabled={formikProps.isSubmitting} type=\"submit\">\n            Save Changes\n          </Button>\n          <Link className=\"btn btn-secondary\" to=\"/movietheaters\">\n            cancel\n          </Link>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\ninterface movieTheaterForm {\n  model: movieTheaterCreationDTO;\n  onSubmit(\n    values: movieTheaterCreationDTO,\n    actions: FormikHelpers<movieTheaterCreationDTO>\n  ): void;\n}\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,MAAM,QAAuB,QAAQ;AACpD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,GAAG,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,eAAe,SAASC,eAAeA,CAACC,KAAuB,EAAE;EAC/D,oBACEF,OAAA,CAACP,MAAM;IACLU,aAAa,EAAED,KAAK,CAACE,KAAM;IAC3BC,QAAQ,EAAEH,KAAK,CAACG,QAAS;IACzBC,gBAAgB,EAAET,GAAG,CAACU,MAAM,CAAC;MAC3BC,IAAI,EAAEX,GAAG,CAACY,MAAM,CAAC,CAAC,CACfC,QAAQ,CAAC,wBAAwB,CAAC,CAClCC,oBAAoB,CAAC;IAC1B,CAAC,CAAE;IAAAC,QAAA,EAEDC,WAAW,iBACXb,OAAA,CAACR,IAAI;MAAAoB,QAAA,gBACHZ,OAAA,CAACL,SAAS;QAACmB,WAAW,EAAC,MAAM;QAACC,KAAK,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE7CnB,OAAA;QAAKoB,KAAK,EAAE;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAAT,QAAA,eACnCZ,OAAA,CAACF,GAAG;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAENnB,OAAA,CAACJ,MAAM;QAAC0B,QAAQ,EAAET,WAAW,CAACU,YAAa;QAACC,IAAI,EAAC,QAAQ;QAAAZ,QAAA,EAAC;MAE1D;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTnB,OAAA,CAACN,IAAI;QAAC+B,SAAS,EAAC,mBAAmB;QAACC,EAAE,EAAC,gBAAgB;QAAAd,QAAA,EAAC;MAExD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb;AAACQ,EAAA,GA7BuB1B,eAAe;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}