{"ast":null,"code":"var _jsxFileName = \"/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/utils/Ratings.tsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Ratings.css\";\nimport AuthenticationContext from \"../auth/AuthenticationContext\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Ratings(props) {\n  _s();\n  const [maximumValueArr, setMaximumValueArr] = useState([]);\n  const [selectedValue, setSelectedValue] = useState(props.selectedValue);\n  const {\n    claims\n  } = useContext(AuthenticationContext);\n  useEffect(() => {\n    setMaximumValueArr(Array(props.maximumValue).fill(0));\n  }, [props.maximumValue]);\n  function handleMouseOver(rate) {\n    setSelectedValue(rate);\n  }\n  function handleClick(rate) {\n    const userIsLoggedIn = claims.length > 0;\n    if (!userIsLoggedIn) {\n      Swal.fire({\n        title: \"Error\",\n        text: \"You need to login\",\n        icon: \"error\"\n      });\n      return;\n    }\n    setSelectedValue(rate);\n    props.onChange(rate);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: maximumValueArr.map((_, index) => /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      onMouseOver: () => handleMouseOver(index + 1),\n      onClick: () => handleClick(index + 1),\n      icon: \"star\",\n      className: `fa-lg pointer ${selectedValue >= index + 1 ? \"checked\" : null}`\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_s(Ratings, \"brY155jVJdQABRt43SjeAzeEL4c=\");\n_c = Ratings;\nvar _c;\n$RefreshReg$(_c, \"Ratings\");","map":{"version":3,"names":["useContext","useEffect","useState","FontAwesomeIcon","AuthenticationContext","Swal","jsxDEV","_jsxDEV","Fragment","_Fragment","Ratings","props","_s","maximumValueArr","setMaximumValueArr","selectedValue","setSelectedValue","claims","Array","maximumValue","fill","handleMouseOver","rate","handleClick","userIsLoggedIn","length","fire","title","text","icon","onChange","children","map","_","index","onMouseOver","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/utils/Ratings.tsx"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Ratings.css\";\nimport AuthenticationContext from \"../auth/AuthenticationContext\";\nimport Swal from \"sweetalert2\";\n\nexport default function Ratings(props: ratingsProps) {\n  const [maximumValueArr, setMaximumValueArr] = useState<number[]>([]);\n  const [selectedValue, setSelectedValue] = useState(props.selectedValue);\n  const { claims } = useContext(AuthenticationContext);\n\n  useEffect(() => {\n    setMaximumValueArr(Array(props.maximumValue).fill(0));\n  }, [props.maximumValue]);\n\n  function handleMouseOver(rate: number) {\n    setSelectedValue(rate);\n  }\n\n  function handleClick(rate: number) {\n    const userIsLoggedIn = claims.length > 0;\n    if (!userIsLoggedIn) {\n      Swal.fire({ title: \"Error\", text: \"You need to login\", icon: \"error\" });\n      return;\n    }\n\n    setSelectedValue(rate);\n    props.onChange(rate);\n  }\n\n  return (\n    <>\n      {maximumValueArr.map((_, index) => (\n        <FontAwesomeIcon\n          onMouseOver={() => handleMouseOver(index + 1)}\n          onClick={() => handleClick(index + 1)}\n          icon=\"star\"\n          key={index}\n          className={`fa-lg pointer ${\n            selectedValue >= index + 1 ? \"checked\" : null\n          }`}\n        />\n      ))}\n    </>\n  );\n}\n\ninterface ratingsProps {\n  maximumValue: number;\n  selectedValue: number;\n  onChange(rate: number): void;\n}\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,SAASC,eAAe,QAAQ,gCAAgC;AAChE,OAAO,eAAe;AACtB,OAAOC,qBAAqB,MAAM,+BAA+B;AACjE,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/B,eAAe,SAASC,OAAOA,CAACC,KAAmB,EAAE;EAAAC,EAAA;EACnD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAW,EAAE,CAAC;EACpE,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAACS,KAAK,CAACI,aAAa,CAAC;EACvE,MAAM;IAAEE;EAAO,CAAC,GAAGjB,UAAU,CAACI,qBAAqB,CAAC;EAEpDH,SAAS,CAAC,MAAM;IACda,kBAAkB,CAACI,KAAK,CAACP,KAAK,CAACQ,YAAY,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;EACvD,CAAC,EAAE,CAACT,KAAK,CAACQ,YAAY,CAAC,CAAC;EAExB,SAASE,eAAeA,CAACC,IAAY,EAAE;IACrCN,gBAAgB,CAACM,IAAI,CAAC;EACxB;EAEA,SAASC,WAAWA,CAACD,IAAY,EAAE;IACjC,MAAME,cAAc,GAAGP,MAAM,CAACQ,MAAM,GAAG,CAAC;IACxC,IAAI,CAACD,cAAc,EAAE;MACnBnB,IAAI,CAACqB,IAAI,CAAC;QAAEC,KAAK,EAAE,OAAO;QAAEC,IAAI,EAAE,mBAAmB;QAAEC,IAAI,EAAE;MAAQ,CAAC,CAAC;MACvE;IACF;IAEAb,gBAAgB,CAACM,IAAI,CAAC;IACtBX,KAAK,CAACmB,QAAQ,CAACR,IAAI,CAAC;EACtB;EAEA,oBACEf,OAAA,CAAAE,SAAA;IAAAsB,QAAA,EACGlB,eAAe,CAACmB,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAC5B3B,OAAA,CAACJ,eAAe;MACdgC,WAAW,EAAEA,CAAA,KAAMd,eAAe,CAACa,KAAK,GAAG,CAAC,CAAE;MAC9CE,OAAO,EAAEA,CAAA,KAAMb,WAAW,CAACW,KAAK,GAAG,CAAC,CAAE;MACtCL,IAAI,EAAC,MAAM;MAEXQ,SAAS,EAAG,iBACVtB,aAAa,IAAImB,KAAK,GAAG,CAAC,GAAG,SAAS,GAAG,IAC1C;IAAE,GAHEA,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIX,CACF;EAAC,gBACF,CAAC;AAEP;AAAC7B,EAAA,CAvCuBF,OAAO;AAAAgC,EAAA,GAAPhC,OAAO;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}