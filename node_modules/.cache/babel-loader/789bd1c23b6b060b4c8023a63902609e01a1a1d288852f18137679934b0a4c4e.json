{"ast":null,"code":"var _jsxFileName = \"/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/utils/EditEntity.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport DisplayErrors from \"./DisplayErrors\";\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditEntity(props) {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [entity, setEntity] = useState();\n  const [errors, setErrors] = useState([]);\n  const history = useNavigate();\n  useEffect(() => {\n    axios.get(`${props.url}/${id}`).then(response => {\n      setEntity(props.transform(response.data));\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n  async function edit(entityToEdit) {\n    try {\n      await axios.put(`${props.url}/${id}`, entityToEdit);\n      history(props.indexURL);\n    } catch (error) {\n      if (error && error.response) {\n        setErrors(error.response.data);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Edit \", props.entityName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayErrors, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), entity ? props.children(entity, edit) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 48\n    }, this)]\n  }, void 0, true);\n}\n_s(EditEntity, \"TdznNlL4exJjo7chtIb6ic8ejW8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditEntity;\nEditEntity.defaultProps = {\n  transform: entity => entity\n};\nvar _c;\n$RefreshReg$(_c, \"EditEntity\");","map":{"version":3,"names":["axios","useEffect","useState","useNavigate","useParams","DisplayErrors","Loading","jsxDEV","_jsxDEV","Fragment","_Fragment","EditEntity","props","_s","id","entity","setEntity","errors","setErrors","history","get","url","then","response","transform","data","edit","entityToEdit","put","indexURL","error","children","entityName","fileName","_jsxFileName","lineNumber","columnNumber","_c","defaultProps","$RefreshReg$"],"sources":["/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/utils/EditEntity.tsx"],"sourcesContent":["import axios, { AxiosResponse } from \"axios\";\nimport { ReactElement, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport DisplayErrors from \"./DisplayErrors\";\nimport Loading from \"./Loading\";\n\nexport default function EditEntity<TCreation, TRead>(\n  props: editEntityProps<TCreation, TRead>\n) {\n  const { id }: any = useParams();\n  const [entity, setEntity] = useState<TCreation>();\n  const [errors, setErrors] = useState<string[]>([]);\n  const history = useNavigate();\n\n  useEffect(() => {\n    axios.get(`${props.url}/${id}`).then((response: AxiosResponse<TRead>) => {\n      setEntity(props.transform(response.data));\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  async function edit(entityToEdit: TCreation) {\n    try {\n      await axios.put(`${props.url}/${id}`, entityToEdit);\n      history(props.indexURL);\n    } catch (error: any) {\n      if (error && error.response) {\n        setErrors(error.response.data);\n      }\n    }\n  }\n\n  return (\n    <>\n      <h3>Edit {props.entityName}</h3>\n      <DisplayErrors errors={errors}></DisplayErrors>\n      {entity ? props.children(entity, edit) : <Loading />}\n    </>\n  );\n}\n\ninterface editEntityProps<TCreation, TRead> {\n  url: string;\n  entityName: string;\n  indexURL: string;\n  transform(entity: TRead): TCreation;\n  transformFormData?(model: TCreation): FormData;\n  children(entity: TCreation, edit: (entity: TCreation) => void): ReactElement;\n}\n\nEditEntity.defaultProps = {\n  transform: (entity: any) => entity,\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAyB,OAAO;AAC5C,SAAuBC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACzD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,eAAe,SAASC,UAAUA,CAChCC,KAAwC,EACxC;EAAAC,EAAA;EACA,MAAM;IAAEC;EAAQ,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC/B,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAY,CAAC;EACjD,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAW,EAAE,CAAC;EAClD,MAAMiB,OAAO,GAAGhB,WAAW,CAAC,CAAC;EAE7BF,SAAS,CAAC,MAAM;IACdD,KAAK,CAACoB,GAAG,CAAE,GAAER,KAAK,CAACS,GAAI,IAAGP,EAAG,EAAC,CAAC,CAACQ,IAAI,CAAEC,QAA8B,IAAK;MACvEP,SAAS,CAACJ,KAAK,CAACY,SAAS,CAACD,QAAQ,CAACE,IAAI,CAAC,CAAC;IAC3C,CAAC,CAAC;IACF;EACF,CAAC,EAAE,CAACX,EAAE,CAAC,CAAC;EAER,eAAeY,IAAIA,CAACC,YAAuB,EAAE;IAC3C,IAAI;MACF,MAAM3B,KAAK,CAAC4B,GAAG,CAAE,GAAEhB,KAAK,CAACS,GAAI,IAAGP,EAAG,EAAC,EAAEa,YAAY,CAAC;MACnDR,OAAO,CAACP,KAAK,CAACiB,QAAQ,CAAC;IACzB,CAAC,CAAC,OAAOC,KAAU,EAAE;MACnB,IAAIA,KAAK,IAAIA,KAAK,CAACP,QAAQ,EAAE;QAC3BL,SAAS,CAACY,KAAK,CAACP,QAAQ,CAACE,IAAI,CAAC;MAChC;IACF;EACF;EAEA,oBACEjB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,GAAI,OAAK,EAACnB,KAAK,CAACoB,UAAU;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChC5B,OAAA,CAACH,aAAa;MAACY,MAAM,EAAEA;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC,EAC9CrB,MAAM,GAAGH,KAAK,CAACmB,QAAQ,CAAChB,MAAM,EAAEW,IAAI,CAAC,gBAAGlB,OAAA,CAACF,OAAO;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACpD,CAAC;AAEP;AAACvB,EAAA,CAjCuBF,UAAU;EAAA,QAGZP,SAAS,EAGbD,WAAW;AAAA;AAAAkC,EAAA,GANL1B,UAAU;AA4ClCA,UAAU,CAAC2B,YAAY,GAAG;EACxBd,SAAS,EAAGT,MAAW,IAAKA;AAC9B,CAAC;AAAC,IAAAsB,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}