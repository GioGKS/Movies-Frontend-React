{"ast":null,"code":"var _jsxFileName = \"/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/forms/TypeAheadActors.tsx\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TypeAheadActors(props) {\n  const actors = [{\n    id: 1,\n    name: \"Tom Holland\",\n    character: \"\",\n    picture: \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/3c/Tom_Holland_by_Gage_Skidmore.jpg/220px-Tom_Holland_by_Gage_Skidmore.jpg\"\n  }, {\n    id: 1,\n    name: \"Keanu Reeves\",\n    character: \"\",\n    picture: \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/33/Reuni達o_com_o_ator_norte-americano_Keanu_Reeves_%2846806576944%29_%28cropped%29.jpg/220px-Reuni達o_com_o_ator_norte-americano_Keanu_Reeves_%2846806576944%29_%28cropped%29.jpg\"\n  }, {\n    id: 1,\n    name: \"Christian Bale\",\n    character: \"\",\n    picture: \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0a/Christian_Bale-7837.jpg/220px-Christian_Bale-7837.jpg\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: props.displayName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typeahead, {\n      id: \"typeahead\",\n      onChange: actors => {\n        if (props.actors.findIndex(x => x.id === actors[0].id) === -1) {\n          props.onAdd([...props.actors, actors[0]]);\n        }\n        console.log(actors);\n      },\n      options: actors,\n      labelKey: actor => actor.name,\n      filterBy: [\"name\"],\n      placeholder: \"Write the name of the actor...\",\n      minLength: 1,\n      flip: true,\n      renderMenuItemChildren: actor => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"actor\",\n          src: actor.picture,\n          style: {\n            height: \"64px\",\n            marginRight: \"10px\",\n            width: \"64px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: actor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: props.actors.map(actor => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: actor.name\n      }, actor.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = TypeAheadActors;\nvar _c;\n$RefreshReg$(_c, \"TypeAheadActors\");","map":{"version":3,"names":["Typeahead","jsxDEV","_jsxDEV","Fragment","_Fragment","TypeAheadActors","props","actors","id","name","character","picture","className","children","displayName","fileName","_jsxFileName","lineNumber","columnNumber","onChange","findIndex","x","onAdd","console","log","options","labelKey","actor","filterBy","placeholder","minLength","flip","renderMenuItemChildren","alt","src","style","height","marginRight","width","map","_c","$RefreshReg$"],"sources":["/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/forms/TypeAheadActors.tsx"],"sourcesContent":["import { Typeahead } from \"react-bootstrap-typeahead\";\nimport { actorMovieDTO } from \"../actors/actors.mode\";\n\nexport default function TypeAheadActors(props: typeAheadActorsProps) {\n  const actors: actorMovieDTO[] = [\n    {\n      id: 1,\n      name: \"Tom Holland\",\n      character: \"\",\n      picture:\n        \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/3c/Tom_Holland_by_Gage_Skidmore.jpg/220px-Tom_Holland_by_Gage_Skidmore.jpg\",\n    },\n    {\n      id: 1,\n      name: \"Keanu Reeves\",\n      character: \"\",\n      picture:\n        \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/33/Reuni達o_com_o_ator_norte-americano_Keanu_Reeves_%2846806576944%29_%28cropped%29.jpg/220px-Reuni達o_com_o_ator_norte-americano_Keanu_Reeves_%2846806576944%29_%28cropped%29.jpg\",\n    },\n    {\n      id: 1,\n      name: \"Christian Bale\",\n      character: \"\",\n      picture:\n        \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0a/Christian_Bale-7837.jpg/220px-Christian_Bale-7837.jpg\",\n    },\n  ];\n\n  return (\n    <div className=\"mb-3\">\n      <label>{props.displayName}</label>\n      <Typeahead\n        id=\"typeahead\"\n        onChange={(actors) => {\n          if (props.actors.findIndex((x) => x.id === actors[0].id) === -1) {\n            props.onAdd([...props.actors, actors[0]]);\n          }\n          console.log(actors);\n        }}\n        options={actors}\n        labelKey={(actor) => actor.name}\n        filterBy={[\"name\"]}\n        placeholder=\"Write the name of the actor...\"\n        minLength={1}\n        flip={true}\n        renderMenuItemChildren={(actor) => (\n          <>\n            <img\n              alt=\"actor\"\n              src={actor.picture}\n              style={{\n                height: \"64px\",\n                marginRight: \"10px\",\n                width: \"64px\",\n              }}\n            />\n            <span>{actor.name}</span>\n          </>\n        )}\n      />\n\n      <ul className=\"list-group\">\n        {props.actors.map((actor) => (\n          <li key={actor.id}>{actor.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\ninterface typeAheadActorsProps {\n  displayName: string;\n  actors: actorMovieDTO[];\n  onAdd(actors: actorMovieDTO[]): void;\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGtD,eAAe,SAASC,eAAeA,CAACC,KAA2B,EAAE;EACnE,MAAMC,MAAuB,GAAG,CAC9B;IACEC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,aAAa;IACnBC,SAAS,EAAE,EAAE;IACbC,OAAO,EACL;EACJ,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,cAAc;IACpBC,SAAS,EAAE,EAAE;IACbC,OAAO,EACL;EACJ,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,gBAAgB;IACtBC,SAAS,EAAE,EAAE;IACbC,OAAO,EACL;EACJ,CAAC,CACF;EAED,oBACET,OAAA;IAAKU,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBX,OAAA;MAAAW,QAAA,EAAQP,KAAK,CAACQ;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClChB,OAAA,CAACF,SAAS;MACRQ,EAAE,EAAC,WAAW;MACdW,QAAQ,EAAGZ,MAAM,IAAK;QACpB,IAAID,KAAK,CAACC,MAAM,CAACa,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACb,EAAE,KAAKD,MAAM,CAAC,CAAC,CAAC,CAACC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE;UAC/DF,KAAK,CAACgB,KAAK,CAAC,CAAC,GAAGhB,KAAK,CAACC,MAAM,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C;QACAgB,OAAO,CAACC,GAAG,CAACjB,MAAM,CAAC;MACrB,CAAE;MACFkB,OAAO,EAAElB,MAAO;MAChBmB,QAAQ,EAAGC,KAAK,IAAKA,KAAK,CAAClB,IAAK;MAChCmB,QAAQ,EAAE,CAAC,MAAM,CAAE;MACnBC,WAAW,EAAC,gCAAgC;MAC5CC,SAAS,EAAE,CAAE;MACbC,IAAI,EAAE,IAAK;MACXC,sBAAsB,EAAGL,KAAK,iBAC5BzB,OAAA,CAAAE,SAAA;QAAAS,QAAA,gBACEX,OAAA;UACE+B,GAAG,EAAC,OAAO;UACXC,GAAG,EAAEP,KAAK,CAAChB,OAAQ;UACnBwB,KAAK,EAAE;YACLC,MAAM,EAAE,MAAM;YACdC,WAAW,EAAE,MAAM;YACnBC,KAAK,EAAE;UACT;QAAE;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFhB,OAAA;UAAAW,QAAA,EAAOc,KAAK,CAAClB;QAAI;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,eACzB;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEFhB,OAAA;MAAIU,SAAS,EAAC,YAAY;MAAAC,QAAA,EACvBP,KAAK,CAACC,MAAM,CAACgC,GAAG,CAAEZ,KAAK,iBACtBzB,OAAA;QAAAW,QAAA,EAAoBc,KAAK,CAAClB;MAAI,GAArBkB,KAAK,CAACnB,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACsB,EAAA,GAjEuBnC,eAAe;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}