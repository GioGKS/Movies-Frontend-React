{"ast":null,"code":"var _jsxFileName = \"/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/genres/EditGenre.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { urlGenres } from \"../endpoints\";\nimport DisplayErrors from \"../utils/DisplayErrors\";\nimport Loading from \"../utils/Loading\";\nimport GenreForm from \"./GenreForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditGenre() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [genre, setGenre] = useState();\n  const [errors, setErrors] = useState([]);\n  useEffect(() => {\n    axios.get(`${urlGenres}/${id}`).then(response => {\n      setGenre(response.data);\n    });\n  }, [id]);\n  async function edit(genreToEdit) {\n    try {\n      await axios.put(`${urlGenres}/${id}`, genreToEdit);\n    } catch (error) {\n      if (error && error.response) {\n        setErrors(error.response.data);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayErrors, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), genre ? /*#__PURE__*/_jsxDEV(GenreForm, {\n      model: genre,\n      onSubmit: async value => {\n        // when the form is posted\n        await edit(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(EditGenre, \"0p7jlmLB0vQMvV0408hSDQ6JvdY=\", false, function () {\n  return [useParams];\n});\n_c = EditGenre;\nvar _c;\n$RefreshReg$(_c, \"EditGenre\");","map":{"version":3,"names":["axios","useEffect","useState","useParams","urlGenres","DisplayErrors","Loading","GenreForm","jsxDEV","_jsxDEV","Fragment","_Fragment","EditGenre","_s","id","genre","setGenre","errors","setErrors","get","then","response","data","edit","genreToEdit","put","error","children","fileName","_jsxFileName","lineNumber","columnNumber","model","onSubmit","value","_c","$RefreshReg$"],"sources":["/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/genres/EditGenre.tsx"],"sourcesContent":["import axios, { AxiosResponse } from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { urlGenres } from \"../endpoints\";\nimport DisplayErrors from \"../utils/DisplayErrors\";\nimport Loading from \"../utils/Loading\";\nimport GenreForm from \"./GenreForm\";\nimport { genreCreationDTO, genreDTO } from \"./genres.mode\";\n\nexport default function EditGenre() {\n  const { id }: any = useParams();\n  const [genre, setGenre] = useState<genreCreationDTO>();\n  const [errors, setErrors] = useState<string[]>([]);\n\n  useEffect(() => {\n    axios\n      .get(`${urlGenres}/${id}`)\n      .then((response: AxiosResponse<genreDTO>) => {\n        setGenre(response.data);\n      });\n  }, [id]);\n\n  async function edit(genreToEdit: genreCreationDTO) {\n    try {\n      await axios.put(`${urlGenres}/${id}`, genreToEdit);\n    } catch (error: any) {\n      if (error && error.response) {\n        setErrors(error.response.data);\n      }\n    }\n  }\n\n  return (\n    <>\n      <h3>Edit Genre</h3>\n      <DisplayErrors errors={errors}></DisplayErrors>\n      {genre ? (\n        <GenreForm\n          model={genre}\n          onSubmit={async (value) => {\n            // when the form is posted\n            await edit(value);\n          }}\n        />\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAyB,OAAO;AAC5C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,aAAa,MAAM,wBAAwB;AAClD,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGpC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAQ,CAAC,GAAGX,SAAS,CAAC,CAAC;EAC/B,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAmB,CAAC;EACtD,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAW,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACdD,KAAK,CACFmB,GAAG,CAAE,GAAEf,SAAU,IAAGU,EAAG,EAAC,CAAC,CACzBM,IAAI,CAAEC,QAAiC,IAAK;MAC3CL,QAAQ,CAACK,QAAQ,CAACC,IAAI,CAAC;IACzB,CAAC,CAAC;EACN,CAAC,EAAE,CAACR,EAAE,CAAC,CAAC;EAER,eAAeS,IAAIA,CAACC,WAA6B,EAAE;IACjD,IAAI;MACF,MAAMxB,KAAK,CAACyB,GAAG,CAAE,GAAErB,SAAU,IAAGU,EAAG,EAAC,EAAEU,WAAW,CAAC;IACpD,CAAC,CAAC,OAAOE,KAAU,EAAE;MACnB,IAAIA,KAAK,IAAIA,KAAK,CAACL,QAAQ,EAAE;QAC3BH,SAAS,CAACQ,KAAK,CAACL,QAAQ,CAACC,IAAI,CAAC;MAChC;IACF;EACF;EAEA,oBACEb,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBtB,OAAA,CAACJ,aAAa;MAACY,MAAM,EAAEA;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC,EAC9ChB,KAAK,gBACJN,OAAA,CAACF,SAAS;MACRyB,KAAK,EAAEjB,KAAM;MACbkB,QAAQ,EAAE,MAAOC,KAAK,IAAK;QACzB;QACA,MAAMX,IAAI,CAACW,KAAK,CAAC;MACnB;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAEFtB,OAAA,CAACH,OAAO;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACX;EAAA,eACD,CAAC;AAEP;AAAClB,EAAA,CAxCuBD,SAAS;EAAA,QACXT,SAAS;AAAA;AAAAgC,EAAA,GADPvB,SAAS;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}