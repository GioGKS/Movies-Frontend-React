{"ast":null,"code":"var _jsxFileName = \"/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/actors/CreateActor.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport DisplayErrors from '../utils/DisplayErrors';\nimport ActorForm from './ActorForm';\nimport { convertActorToFormData } from '../utils/formDataUtils';\nimport axios from 'axios';\nimport { urlActors } from '../endpoints';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateActor() {\n  _s();\n  const [errors, setErrors] = useState([]);\n  const history = useNavigate();\n  async function create(actor) {\n    try {\n      const formData = convertActorToFormData(actor);\n      await axios({\n        method: 'post',\n        url: urlActors,\n        data: formData,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      history('/actors');\n    } catch (error) {\n      if (error && error.response) {\n        setErrors(error.response.data);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Actor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DisplayErrors, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ActorForm, {\n      model: {\n        name: '',\n        dateOfBirth: undefined\n      },\n      onSubmit: async values => await create(values)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(CreateActor, \"Vh4smq1LnZSfrdWD6abCRXQi13s=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateActor;\nvar _c;\n$RefreshReg$(_c, \"CreateActor\");","map":{"version":3,"names":["useState","DisplayErrors","ActorForm","convertActorToFormData","axios","urlActors","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateActor","_s","errors","setErrors","history","create","actor","formData","method","url","data","headers","error","response","children","fileName","_jsxFileName","lineNumber","columnNumber","model","name","dateOfBirth","undefined","onSubmit","values","_c","$RefreshReg$"],"sources":["/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/actors/CreateActor.tsx"],"sourcesContent":["import { useState } from 'react'\nimport DisplayErrors from '../utils/DisplayErrors';\nimport ActorForm from './ActorForm'\nimport { actorCreationDTO } from './actors.mode'\nimport {convertActorToFormData} from '../utils/formDataUtils';\nimport axios from 'axios';\nimport { urlActors } from '../endpoints';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function CreateActor(){\n\n    const [errors, setErrors] = useState<string[]>([]);\n    const history = useNavigate();\n\n    async function create(actor: actorCreationDTO){\n        try{\n            const formData = convertActorToFormData(actor);\n\n            await axios({\n                method: 'post',\n                url: urlActors,\n                data: formData,\n                headers: {'Content-Type': 'multipart/form-data'}\n            });\n            history('/actors');\n        }\n        catch (error:any){\n            if (error && error.response){\n                setErrors(error.response.data);\n            }\n        }\n    }\n\n    return (\n        <>\n            <h3>Create Actor</h3>\n            <DisplayErrors errors={errors} />\n            <ActorForm model={{name: '', dateOfBirth: undefined}}\n                onSubmit={async values => await create(values)}\n            />\n        </>\n    )\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,aAAa,MAAM,wBAAwB;AAClD,OAAOC,SAAS,MAAM,aAAa;AAEnC,SAAQC,sBAAsB,QAAO,wBAAwB;AAC7D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,eAAe,SAASC,WAAWA,CAAA,EAAE;EAAAC,EAAA;EAEjC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAW,EAAE,CAAC;EAClD,MAAMe,OAAO,GAAGT,WAAW,CAAC,CAAC;EAE7B,eAAeU,MAAMA,CAACC,KAAuB,EAAC;IAC1C,IAAG;MACC,MAAMC,QAAQ,GAAGf,sBAAsB,CAACc,KAAK,CAAC;MAE9C,MAAMb,KAAK,CAAC;QACRe,MAAM,EAAE,MAAM;QACdC,GAAG,EAAEf,SAAS;QACdgB,IAAI,EAAEH,QAAQ;QACdI,OAAO,EAAE;UAAC,cAAc,EAAE;QAAqB;MACnD,CAAC,CAAC;MACFP,OAAO,CAAC,SAAS,CAAC;IACtB,CAAC,CACD,OAAOQ,KAAS,EAAC;MACb,IAAIA,KAAK,IAAIA,KAAK,CAACC,QAAQ,EAAC;QACxBV,SAAS,CAACS,KAAK,CAACC,QAAQ,CAACH,IAAI,CAAC;MAClC;IACJ;EACJ;EAEA,oBACIb,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBrB,OAAA,CAACP,aAAa;MAACY,MAAM,EAAEA;IAAO;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCrB,OAAA,CAACN,SAAS;MAAC4B,KAAK,EAAE;QAACC,IAAI,EAAE,EAAE;QAAEC,WAAW,EAAEC;MAAS,CAAE;MACjDC,QAAQ,EAAE,MAAMC,MAAM,IAAI,MAAMnB,MAAM,CAACmB,MAAM;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAAA,eACJ,CAAC;AAEX;AAACjB,EAAA,CAjCuBD,WAAW;EAAA,QAGfL,WAAW;AAAA;AAAA8B,EAAA,GAHPzB,WAAW;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}