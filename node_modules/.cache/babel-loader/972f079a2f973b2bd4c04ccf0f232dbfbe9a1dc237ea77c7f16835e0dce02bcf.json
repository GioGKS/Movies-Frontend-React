{"ast":null,"code":"var _jsxFileName = \"/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/auth/AuthForm.tsx\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport TextField from \"../forms/TextField\";\nimport Button from \"../utils/Button\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthForm(props) {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: props.model,\n    onSubmit: props.onSubmit,\n    validationSchema: Yup.object({\n      email: Yup.string().required(\"This field is required\").email(\"You have to insert a valid email\"),\n      password: Yup.string().required(\"This field is required\")\n    }),\n    children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        displayName: \"Email\",\n        field: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        displayName: \"Password\",\n        field: \"password\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: formikProps.isSubmitting,\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn btn-secondary\",\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["Formik","Form","Yup","TextField","Button","Link","jsxDEV","_jsxDEV","AuthForm","props","initialValues","model","onSubmit","validationSchema","object","email","string","required","password","children","formikProps","displayName","field","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","isSubmitting","className","to","_c","$RefreshReg$"],"sources":["/Users/gio/Desktop/Project-Clone/Movies-Frontend-React/src/auth/AuthForm.tsx"],"sourcesContent":["import { Formik, FormikHelpers, Form } from \"formik\";\nimport { userCredentials } from \"./auth.models\";\nimport * as Yup from \"yup\";\nimport TextField from \"../forms/TextField\";\nimport Button from \"../utils/Button\";\nimport { Link } from \"react-router-dom\";\n\nexport default function AuthForm(props: authFormProps) {\n  return (\n    <Formik\n      initialValues={props.model}\n      onSubmit={props.onSubmit}\n      validationSchema={Yup.object({\n        email: Yup.string()\n          .required(\"This field is required\")\n          .email(\"You have to insert a valid email\"),\n        password: Yup.string().required(\"This field is required\"),\n      })}\n    >\n        {formikProps => (\n            <Form>\n                <TextField displayName=\"Email\" field=\"email\" />\n                <TextField displayName=\"Password\" field=\"password\" type=\"password\" />\n\n                <Button disabled={formikProps.isSubmitting} type=\"submit\">Send</Button>\n                <Link className=\"btn btn-secondary\" to=\"/\"></Link>\n            </Form>\n        )}\n\n    </Formik>\n  );\n}\n\ninterface authFormProps {\n  model: userCredentials;\n  onSubmit(\n    values: userCredentials,\n    actions: FormikHelpers<userCredentials>\n  ): void;\n}\n"],"mappings":";AAAA,SAASA,MAAM,EAAiBC,IAAI,QAAQ,QAAQ;AAEpD,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,QAAQA,CAACC,KAAoB,EAAE;EACrD,oBACEF,OAAA,CAACP,MAAM;IACLU,aAAa,EAAED,KAAK,CAACE,KAAM;IAC3BC,QAAQ,EAAEH,KAAK,CAACG,QAAS;IACzBC,gBAAgB,EAAEX,GAAG,CAACY,MAAM,CAAC;MAC3BC,KAAK,EAAEb,GAAG,CAACc,MAAM,CAAC,CAAC,CAChBC,QAAQ,CAAC,wBAAwB,CAAC,CAClCF,KAAK,CAAC,kCAAkC,CAAC;MAC5CG,QAAQ,EAAEhB,GAAG,CAACc,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,wBAAwB;IAC1D,CAAC,CAAE;IAAAE,QAAA,EAEAC,WAAW,iBACRb,OAAA,CAACN,IAAI;MAAAkB,QAAA,gBACDZ,OAAA,CAACJ,SAAS;QAACkB,WAAW,EAAC,OAAO;QAACC,KAAK,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/CnB,OAAA,CAACJ,SAAS;QAACkB,WAAW,EAAC,UAAU;QAACC,KAAK,EAAC,UAAU;QAACK,IAAI,EAAC;MAAU;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAErEnB,OAAA,CAACH,MAAM;QAACwB,QAAQ,EAAER,WAAW,CAACS,YAAa;QAACF,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvEnB,OAAA,CAACF,IAAI;QAACyB,SAAS,EAAC,mBAAmB;QAACC,EAAE,EAAC;MAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD;EACT;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEG,CAAC;AAEb;AAACM,EAAA,GAxBuBxB,QAAQ;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}